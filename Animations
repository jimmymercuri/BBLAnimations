local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:FindFirstChildOfClass("Humanoid")
if not humanoid then
    warn("No Humanoid found!")
    return
end

local animator = humanoid:FindFirstChildOfClass("Animator")
if not animator then
    animator = Instance.new("Animator")
    animator.Parent = humanoid
end

-- Animation IDs (Replace these with your own)
local animations = {
    ["Zero"] = "rbxassetid://14440700751",
    ["Nine"] = "rbxassetid://13379929865",
    ["Eight"] = "rbxassetid://13870775550",
    ["Seven"] = "rbxassetid://13823367025",
    ["Six"] = "rbxassetid://14440844682",
    ["Five"] = "rbxassetid://14089210838" -- Replace with your animation ID
}

local animationTracks = {} -- Store loaded animations

-- Load animations into memory
for key, animId in pairs(animations) do
    local anim = Instance.new("Animation")
    anim.AnimationId = animId
    animationTracks[key] = animator:LoadAnimation(anim)
end

-- Detect key presses
local userInputService = game:GetService("UserInputService")

userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end -- Ignore if game UI is active

    local key = input.KeyCode.Name
    print("Key pressed:", key)

    -- Play the corresponding animation
    if animationTracks[key] then
        animationTracks[key]:Play()
    end

    -- Stop all animations if LeftBracket is pressed
    if key == "LeftBracket" then
        for _, track in pairs(animationTracks) do
            track:Stop()
        end
        print("All animations stopped.")
    end
end)
